{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"solver": {
			"defaultValue": "Raw",
			"allowedValues": [
				"Raw",
				"altair-nanoultraFuildX"
			
			],
			"type": "String",
			"metadata": {
				"description": "Please select the solver that you would like to test"
			}
		},
		"vmSku": {
			"defaultValue": "Standard_NC24s_v2",
			"allowedValues": [
				"Standard_NC24s_v2",
				"Standard_NC24s_v3"				
			],
			"type": "String",
			"metadata": {
				"description": "Which instance would you like to deploy to? Not all VMs are available in all regions"
			}
		},
		"vmssName": {
			"maxLength": 10,
			"type": "String",
			"metadata": {
				"description": "String used as a base for naming resources. Must be 3-10 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
			}
		},
		"instanceCount": {
			"defaultValue": 0,
			"maxValue": 100,
			"type": "Int",
			"metadata": {
				"description": "Number of VM instances (100 or less)."
			}
		},
        "dataDiskSize": {
           "type": "int",
            "defaultValue": 512,
            "metadata": {
            "description": "The size in GB of each of 16 data disks that are attached to the VM.  A RAID-0 volume is created with all data disks that is dataDiskSize * dataDiskCount in size."
            }
        },
        "nbDataDisks": {
            "type": "int",
            "defaultValue": 2,
            "maxValue": 16,
            "metadata": {
                "description": "The number of disks to attach to the NFS server."
            }
        },
		"adminUsername": {
			"type": "String",
			"metadata": {
				"description": "Admin username on all VMs."
			}
		},
		"adminPassword": {
			"type": "SecureString",
			"metadata": {
				"description": "Admin password on all VMs."
			}
		},
		"license": {
			"maxLength": 30,
			"defaultValue": "0.0.0.0",
			"type": "String",
			"metadata": {
				"description": "This is the IP address of the license server or POD key for the application. If license is unknown or not required simply enter 0.0.0.0, if a license is required, but unknown the application will not work"
			}
		},
		"downloadModel": {
			"defaultValue": "None",
			"allowedValues": [
				"None",
				"demo_cases"
			],
			"type": "String",
			"metadata": {
				"description": "Which benchmark model would you like to download, make sure to select the appropriate model for your solver"
			}
		}
	},
	"variables": {
		"resourceLocation": "[resourceGroup().location]",
		"namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
		"longNamingInfix": "[toLower(parameters('vmssName'))]",
		"jumpBoxName": "[concat(variables('longNamingInfix'),'jb')]",
		"jumpBoxSAName": "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), 'jumpboxsa')), 'jb')]",
		"jumpBoxOSDiskName": "[concat(variables('jumpBoxName'), 'osdisk')]",
		"jumpBoxVHDContainerName": "[concat(variables('jumpBoxName'), 'vhd')]",
		"jumpBoxIPConfigName": "[concat(variables('jumpBoxName'), 'ipconfig')]",
		"jumpBoxNicName": "[concat(variables('jumpBoxName'), 'nic')]",
		"storageAccountType": "Standard_LRS",
		"newStorageAccountSuffix": "[concat(variables('namingInfix'), 'sa')]",
		"uniqueStringArray": [
			"[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '0')))]"
		],
		"saCount": "[length(variables('uniqueStringArray'))]",
		"vhdContainerName": "[concat(variables('namingInfix'), 'vhd')]",
		"osDiskName":"[concat(variables('namingInfix'), 'osdisk')]",
		"addressPrefix": "10.0.0.0/24",
		"subnetPrefix": "10.0.0.0/25",
		"virtualNetworkName": "[concat(variables('namingInfix'), 'vnet')]",
		"subnetName": "[concat(variables('namingInfix'), 'subnet')]",
		"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
		"subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
		"publicIPAddressName": "[concat(variables('namingInfix'), 'pip')]",
		"publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
		"nicName": "[concat(variables('namingInfix'), 'nic')]",
		"ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
        "dataDiskArray": [
        {
            "diskSizeGB": "[parameters('datadiskSize')]",
            "lun": "0",
            "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "1",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "2",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "3",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "4",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "5",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "6",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "7",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "8",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "9",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "10",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "11",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "12",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "13",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "14",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "15",
        "createOption": "Empty"
      }
    ],

		"scriptUrl": "https://raw.githubusercontent.com/hirtanak/azure-gpgpu-poc/master/",
		"cnSetupScript": "cn-setup.sh",
		"hnSetupScript": "hn-setup.sh",
		"osType": {
			"publisher": "microsoft-ads",
			"offer": "linux-data-science-vm",
			"sku": "linuxdsvm",
			"version": "latest"
		},
		"imageReference": "[variables('osType')]",
		"JBoxType": {
			"publisher": "microsoft-ads",
			"offer": "linux-data-science-vm",
			"sku": "linuxdsvm",
			"version": "latest"
		},
		"JBimageReference": "[variables('JBoxType')]",
		"vmScripts": {
			"scriptsToDownload": [
				"[concat(variables('scriptUrl'), 'cn-setup.sh')]",
				"[concat(variables('scriptUrl'), 'hn-setup.sh')]",
				"[concat(variables('scriptUrl'), 'clusRun.sh')]",
				"[concat(variables('scriptUrl'), '/solvers/install-', parameters('solver'), '.sh')]"	
			],
			"commandToExecute": ""
		},
		"computeApiVersion": "2017-03-30",
		"networkApiVersion": "2016-03-30",
		"storageApiVersion": "2015-06-15"
	},
	"resources": [{
		"type": "Microsoft.Network/virtualNetworks",
		"name": "[variables('virtualNetworkName')]",
		"apiVersion": "[variables('networkApiVersion')]",
		"location": "[variables('resourceLocation')]",
		"properties": {
			"addressSpace": {
				"addressPrefixes": [
					"[variables('addressPrefix')]"
				]
			},
			"subnets": [{
				"name": "[variables('subnetName')]",
				"properties": {
					"addressPrefix": "[variables('subnetPrefix')]"
				}
			}]
		}
	},{
		"type": "Microsoft.Storage/storageAccounts",
		"name": "[variables('jumpBoxSAName')]",
		"apiVersion": "[variables('storageApiVersion')]",
		"location": "[variables('resourceLocation')]",
		"properties": {
			"accountType": "[variables('storageAccountType')]"
		}
	}, {
		"type": "Microsoft.Storage/storageAccounts",
		"name": "[concat(variables('uniqueStringArray')[copyIndex()], variables('newStorageAccountSuffix'))]",
		"apiVersion": "[variables('storageApiVersion')]",
		"location": "[variables('resourceLocation')]",
		"copy": {
			"name": "storageLoop",
			"count": "[variables('saCount')]"
		},
		"properties": {
			"accountType": "[variables('storageAccountType')]"
		}
	}, {
		"type": "Microsoft.Network/publicIPAddresses",
		"name": "[variables('publicIPAddressName')]",
		"apiVersion": "[variables('networkApiVersion')]",
		"location": "[variables('resourceLocation')]",
		"properties": {
			"publicIPAllocationMethod": "Dynamic",
			"dnsSettings": {
				"domainNameLabel": "[variables('longNamingInfix')]"
			}
		}
	}, {
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[variables('jumpBoxNicName')]",
		"apiVersion": "[variables('networkApiVersion')]",
		"location": "[variables('resourceLocation')]",
		"properties": {
			"ipConfigurations": [{
				"name": "[variables('jumpBoxIPConfigName')]",
				"properties": {
					"privateIPAllocationMethod": "Dynamic",
					"publicIPAddress": {
						"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
					},
					"subnet": {
						"id": "[variables('subnetRef')]"
					}
				}
			}]
		},
		"dependsOn": [
			"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
			"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
		]
	}, 
    {
		"type": "Microsoft.Compute/virtualMachines",
		"name": "[variables('jumpBoxName')]",
		"apiVersion": "[variables('computeApiVersion')]",
		"location": "[variables('resourceLocation')]",
		"plan": {
			"name": "linuxdsvm",
			"publisher": "microsoft-ads",
			"product": "linux-data-science-vm"
			},
		"properties": {
			"hardwareProfile": {
				"vmSize": "[parameters('vmSku')]"
			},
			"osProfile": {
				"computerName": "[variables('jumpBoxName')]",
				"adminUsername": "[parameters('adminUsername')]",
				"adminPassword": "[parameters('adminPassword')]"
			},
            "storageProfile": {
                "imageReference": "[variables('imageReference')]",
                 "osDisk": {
                    "name": "[concat(variables('jumpBoxName'),'-md-os')]",
                    "createOption": "FromImage",
                    "managedDisk": {
                        "storageAccountType": "[variables('storageAccountType')]"
                    },
                    "diskSizeGB": "[parameters('dataDiskSize')]"
                 }
            },
			"networkProfile": {
				"networkInterfaces": [{
					"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('jumpBoxNicName'))]"
				}]
			},
			"diagnosticsProfile": {
				"bootDiagnostics": {
					"enabled": "true",
					"storageUri": "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net')]"
				}
			}
		},
		"resources": [{
			"type": "extensions",
			"name": "masterExtension",
			"apiVersion": "[variables('storageApiVersion')]",
			"location": "[variables('resourceLocation')]",
			"tags": {
				"displayName": "ScriptExtension"
			},
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "CustomScript",
				"typeHandlerVersion": "2.0",
        			"autoUpgradeMinorVersion": true,
			"settings": {
				"fileUris": "[variables('vmScripts').scriptsToDownload]",
				"commandToExecute": "[concat('bash ', 'hn-setup.sh ',parameters('solver'),' ',parameters('adminUsername'),' ',parameters('adminPassword'),' ',parameters('downloadModel'),' ',parameters('license')) ]",
					"timestamp": 4
				}
			},
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('jumpBoxName'))]",
				"[concat('Microsoft.Compute/virtualMachineScaleSets/',variables('namingInfix'))]"
			]
		}],
		"dependsOn": [
			"[concat('Microsoft.Storage/storageAccounts/', variables('jumpBoxSAName'))]",
			"[concat('Microsoft.Network/networkInterfaces/', variables('jumpBoxNicName'))]"
		]
	}, {
		"type": "Microsoft.Compute/virtualMachineScaleSets",
		"sku": {
			"name": "[parameters('vmSku')]",
			"tier": "Standard",
			"capacity": "[parameters('instanceCount')]"
		},
		"name": "[variables('namingInfix')]",
		"apiVersion": "[variables('computeApiVersion')]",
		"location": "[variables('resourceLocation')]",
		            "plan": {
			"name": "linuxdsvm",
			"publisher": "microsoft-ads",
		        "product": "linux-data-science-vm"
			},
		"properties": {
			"overprovision": "true",
			"upgradePolicy": {
				"mode": "Manual"
			},
			"virtualMachineProfile": {       
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",  
                    "osDisk": {
                        "caching": "ReadOnly",
                        "createOption": "FromImage",
                        "managedDisk": {
                        }
                    }
                },
				"osProfile": {
					"computerNamePrefix": "[variables('namingInfix')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"networkProfile": {
					"networkInterfaceConfigurations": [{
						"name": "[variables('nicName')]",
						"properties": {
							"primary": "true",
							"ipConfigurations": [{
								"name": "[variables('ipConfigName')]",
								"properties": {
									"subnet": {
										"id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
									}
								}
							}]
						}
					}]
				}
			}
		},
		"dependsOn": [
			"[concat('Microsoft.Storage/storageAccounts/', variables('jumpBoxSAName'))]",
			"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
		]
	}]
}
